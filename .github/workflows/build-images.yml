  on: push
  jobs:
    build-and-publish-head:
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/develop' # Running this job only for develop branch

      steps:
        - uses: actions/checkout@v2 # Checking out the repo

        - name: Build and Publish API image
          uses: VaultVulp/gp-docker-action@1.1.7
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
            image-name: csgobot-api # Provide Docker image name
            image-tag: head # Provide Docker image tag
            dockerfile: ./api/Dockerfile
            build-context: ./api

        - name: Build and Publish BOT image
          uses: VaultVulp/gp-docker-action@1.1.7
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
            image-name: csgobot-bot # Provide Docker image name
            image-tag: head # Provide Docker image tag
            dockerfile: ./bot/Dockerfile
            build-context: ./bot

    build-publish-deploy-master:
      environment: main_deployment
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/master' # Running this job only for develop branch

      steps:
        - uses: actions/checkout@v2 # Checking out the repo

        - name: Build and Publish API image
          uses: VaultVulp/gp-docker-action@1.1.7
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
            image-name: csgobot-api # Provide Docker image name
            dockerfile: ./api/Dockerfile
            build-context: ./api

        - name: Build and Publish BOT image
          uses: VaultVulp/gp-docker-action@1.1.7
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
            image-name: csgobot-bot # Provide Docker image name
            dockerfile: ./bot/Dockerfile
            build-context: ./bot

        - name: Copy repository contents via scp
          uses: appleboy/scp-action@master
          env:
            HOST: ${{ secrets.HOST }}
            USERNAME: ${{ secrets.USERNAME }}
            PORT: ${{ secrets.PORT }}
            KEY: ${{ secrets.SSHKEY }}
          with:
            source: "./docker-compose.yml"
            target: "/home/csgobot"

        - name: Run docker-compose
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            USERNAME: ${{ secrets.USERNAME }}
            PORT: ${{ secrets.PORT }}
            KEY: ${{ secrets.SSHKEY }}
            script: cd /home/csgobot && echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://docker.pkg.github.com -u jfoerste --password-stdin && docker-compose up --build -d